#!/usr/bin/env node

const radioreference = require('./index')
const randomColor = require('randomcolor')

if (process.argv.length !== 3) {
  console.error('Usage: ./gqrx <ZIPCODE>')
  process.exit(1)
}

const zip = process.argv[2]

// get the modulation of the station
const getMod = station => {
  switch (station.mode) {
    case 'FMN':
      return 'Narrow FM'
    case 'FM':
      return 'WFM (stereo)'
    case 'AM':
      return 'AM'
    case 'P25':
      return 'P25'
    default:
      return 'Raw I/Q'
  }
}

// get the bandwidth of the station
const getBandwidth = station => {
  return 10000
}

// get a color for a tag, with some categories
const getColor = tag => {
  if (tag.match(/fire/i)) {
    return randomColor({ hue: 'orange' })
  }
  if (tag.match(/police/i)) {
    return randomColor({ hue: 'blue' })
  }
  if (tag.match(/school/i)) {
    return randomColor({ hue: 'yellow' })
  }
  if (tag.match(/military/i)) {
    return randomColor({ hue: 'green' })
  }
  if (tag.match(/army/i)) {
    return randomColor({ hue: 'green' })
  }
  if (tag.match(/navy/i)) {
    return randomColor({ hue: 'blue' })
  }
  if (tag.match(/fbi/i)) {
    return randomColor({ hue: 'blue' })
  }
  return randomColor()
}

const run = async () => {
  const data = await radioreference(zip)
  const tags = [...new Set(data.map(i => i.category)), ...new Set(data.map(i => i.tag)), ...new Set(data.map(i => i.alphaTag))]
  console.log('# Tag name                              ;  color')
  tags.forEach(tag => {
    console.log(`${tag.padEnd(40, ' ')}; ${getColor(tag)}`)
  })
  console.log('\n# Frequency ; Name                     ; Modulation          ;  Bandwidth ; Tags')
  data.forEach(station => {
    console.log(`${String(station.frequency * 1000000).padEnd(10, ' ')}; ${station.description.padEnd(40, '')}; ${getMod(station)}; ${getBandwidth(station)}; ${[station.category, station.tag, station.alphaTag].join(',')}`)
  })
}
run()
